Goals:

Collect audio clips and stitch them together into one "recording"



Requirements:
P0
collect and tag audio (make it video with built in webcam ? )
	surface audio options
	record when ready
	playback recording
	option to retry
	option to cancel
	option to submit
	tag recorded clips

stitch together based on settings/input
	Some sort of markup language?
	settings allow fixed sections
	settings allow optional sections [have or skip over]
	settings allow variable list of inputs [chain n sections]

P1
volume normalization

cut out empty space around speech

distributed collection across multiple machines



P2
smooth transitions
	tempo of speech
	fade unfade
	background noise

input gives richer specification 
	on order of importance (and surface more important stuff first)
	on who is allowed to record what

more powerful stitching
	handles




Existing work / Research:
Audio related Libraries:
(X) - OpenAL - play & combine 
(?) - FFTW - open fast fourier transform (included in clam)
(?) - CLAM - https://clam-project.org/doc.html
(?) - STK
(?) - CSL
(?) - SndObj
(?) - RtAudio
(?) - Aubio
(?) - Essentia - https://github.com/MTG/essentia
(?) - 

Other Libraries:
(O) - Qt - cross platform GUI and data handling
(?) - 
(?) - 
(?) - 
(?) - 


Video caputre:
Open pnp: cross platform video capture:
	https://github.com/openpnp/openpnp-capturesu



Overall architecture:

In the complete and compiled setup:

	A_Collect (.exe):
		(QT) executable that looks at script, and shows propmts / options, and saves files in a well known format and names
	A_Stitch (.exe):
		executable that looks at script, and the collect audio files, and outputs everything into a single audio/video.
	data/script.json
		A JSON based file that specifies what prompts we give, and how the collected audio should be stitched together
	data/blah.blah
		collected audio/video files should live here.


A_Collect:
		Selecting a option brings up a prompt, (and maybe a video screen and visual recording indicator) and options
		Start
		Stop
		Restart
		Playback: 
		Submit

A_Stitch:



Data:
Audio Database (folder with files)
script

Executables:
Collector looks at script and Audio database
Collector asks for user class (optional) 
	Collector creates a list of missing audio based on priority, and shows prompts/ options for recording


Collector has prompt for stats:
	Shows missing audio for completion.
	Shows amount of audio collected and the balance of types of audio collected.


Stitcher looks at script and Audio database
Stitcher should show same set of missing audio for completion as collector
Stitcher can be command line only. Run to generate single audio file.