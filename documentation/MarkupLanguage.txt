Input markup language:

Specify User Type
Specify 


JSON path: [project]/script.json
file names: [project]/chunkno(-chunkname)_optionno(-optionname)_id

JSON-like
{
	"Title": "Wedcongrats",
	"Users": ["narrator", "bride_Guest", "groom_Guest", "guest"], //well ordered, 0 indexed
	"UserSelections": {nu fan qin you":1, "nan fan qin you":2, "dou shi":3}
	"Script": //in order of appearanc
e	[
		{"Transcript": "I lived in a", "Users":[0], }
		{"Selection":"houses", "Prompt":""}
		{"Prompt": "Describe you it feels living in ad housing. ex. It was horrid" }
		{}
	]
}

Transcript is optional, but will be the fallback if "Prompt" is missing


Descriptors for sound, at least one should be provided

{"I lived in a", } -> backstory-1.wav
{(1+)["hut","house", "cell block"], "squalor"} -> backstory-2_squalor_hut.wav backstory-2squalor-house.wav backstory-2-squalor-cellblock.wav

The main function of the JSON is to provide a blueprint for the joiner
The collecter using this script is optional.

Collector usage of the script"

	"Transcript" : text transcript, not useful for freeform
	"Selection" : option to be selected, falls back to prompt, falls back to transcript (character cutoff)
	"Prompt" : extra information shown once option is selected. Falls back to transcript, falls back to prompt

Joiner usage of the script:
	"Title" -> used for final output name, falls back to out.webm / out.mp3
	"Users" -> ignored in V1
	"UserSelection" -> ignored
	"Script" -> used to order inputs
.